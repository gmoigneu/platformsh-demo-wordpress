/*
	VARIABLES
*/

/* LAYOUT */

$max_width: 1330px;

/* COLORS */

$accent_color: #7fbb00;
$accent_light_color: #ebf4e4;
$accent_dark_color: #5aa738;

/* SOCIAL */

$twitter_color: #55acee;
$facebook_color: #3b5998;
$google_color: #dd4b39;
$dribbble_color: #ea4c89;
$instagram_color: #3f729b;
$github_color: #333;
$github_color_light: #999;
$rss_color: #ee802f;
$youtube_color: #c4302b;
$pinterest_color: #c8232c;
$linkedin_color: #0e76a8;
$reddit_color: #5f99cf;
$skype_color: #00aff0;
$tumblr_color: #35465c;
$vine_color: #00b488;
$vk_color: #45668e;
$flickr_color: #ff0084;
$stackoverflow_color: #fe7a15;
$twitch_color: #6441a5;
$vimeo_color: #1ab7ea;
$weibo_color: #d72928;
$email_color: #76b852;
$soundcloud_color: #f80;

/* FONTS */

$font_header: "Montserrat", "Arial", Sans-Serif;
$font_body: "Open Sans", "Times New Roman", Serif;
$font_main: "Merriweather", "Times New Roman", Serif;

/* ANIMATIONS */

@include keyframes(fadein) {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
	}
}

@include keyframes(fadeinfrontpage) {
	from {
		opacity: 0;
	}

	to {
		opacity: .25;
	}
}

@include keyframes(fadeinbgimage) {
	from {
		opacity: 0;
	}

	to {
		opacity: 0.5;
	}
}

@include keyframes(fadeinbgheaderimage) {
	from {
		opacity: 0;
	}

	to {
		opacity: 0.3;
	}
}

@include keyframes(spin) {
	from {
		@include transform(rotate(0deg));
	}

	to {
		@include transform(rotate(360deg));
	}
}

@include keyframes(slideupin) {
	from {
		margin-top: 20px;
	}

	to {
		margin-top: 0%;
	}
}

@include keyframes(pulsate) {
	0% {
		bottom: 0;
		opacity: .4;
	}

	50% {
		bottom: 2%;
		opacity: 1.0;
	}

	100% {
		bottom: 0;
		opacity: .4;
	}
}

@include keyframes(fadeinvertical) {
	0% {
		opacity: 0;
		@include transform(translate3d(0, 2%, 0));
	}

	100% {
		opacity: 1.0;
		@include transform(translate3d(0, 0, 0));
	}
}

@mixin trans-prefix($value, $prefix: "") {
	$slice: str-slice(inspect($value), 0, 9);
	@if $slice == "transform" {
		#{$prefix}transition: #{$prefix}#{$value};
	} @else {
		#{$prefix}transition: $value;
	}
}

@mixin transition($properties...) {
	@if length($properties) > 1 {
		$spec:              ();
		@for $i from 1 through length($properties) {
			$spec:            append($spec, nth($properties, $i), comma);
		}
	} @else {
		$spec:              $properties;
	}
	@include trans-prefix($spec, -webkit-);
	@include trans-prefix($spec, -moz-);
	@include trans-prefix($spec);
}